# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  phpVersion: 7.2

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

# Download Secure File
# Download a secure file to a temporary location on the build or release agent
- task: DownloadSecureFile@1
  inputs:
    secureFile: acquiacli.yml

- script: mv $(Agent.TempDirectory)/acquiacli.yml ./
  displayName: 'Move cli data.'

- script: |
    rm -rf .gitignore
    cp .gitignore-prod ./.gitignore
  displayName: 'Rename git ignore file.'

- script: |
    sudo apt-get remove composer
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    php composer-setup.php
    php -r "unlink('composer-setup.php');"
    sudo mv composer.phar /usr/local/bin/composer
    composer --version
  displayName: 'Update composer'

#- script: composer install --no-interaction --prefer-dist
  #displayName: 'composer install'

- script: |
    git config --global user.email "oasislrjjrj@gmail.com"
    git config --global user.name "Joshua Li"
    git remote add acquia jldemo@svn-5468.devcloud.hosting.acquia.com:jldemo.git
    git fetch acquia
    git add .
    git commit -m 'Release1'
    git tag release1
    git push acquia release1 -f --tags
  displayName: 'Push to Acquia'

- script: ./vendor/bin/acquiacli preprod:deploy jldemo.dev dev release1 true
  displayName: 'Deploy to Acquia'

- script: |
    ./vendor/bin/drush @dev state-set system.maintenance_mode 1
    ./vendor/bin/drush @dev cr
    ./vendor/bin/drush @dev updb
    ./vendor/bin/drush @dev cim ../config/default
    ./vendor/bin/drush @dev cr
    ./vendor/bin/drush @dev state-set system.maintenance_mode 0
  displayName: 'Update configuration'


